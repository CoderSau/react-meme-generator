{"version":3,"sources":["meme-generator/CanvasImage.js","meme-generator/CloseButton.js","meme-generator/CanvasText.js","meme-generator/AddedImage.js","meme-generator/TextProperties.js","meme-generator/Download.js","utils/constants.js","meme-generator/Size.js","meme-generator/MemeGenerator.js","App.js","reportWebVitals.js","index.js"],"names":["CanvasImage","state","image","handleLoad","setState","this","loadImage","oldProps","props","src","width","height","removeEventListener","a","window","Image","sameSite","crossOrigin","addEventListener","x","y","ref","node","imageNode","Component","closeButton","deleteRef","onClick","delete","onTouchEnd","fontSize","fontFamily","text","fill","CanvasText","textFieldOnDblClick","e","textNode","currentTarget","attrs","absolutePosition","isHide","areaPosition","textarea","document","createElement","getElementById","appendChild","value","style","position","top","left","padding","border","margin","overflow","background","outline","resize","lineHeight","transformOrigin","textAlign","align","color","rotation","transform","px","navigator","userAgent","toLowerCase","indexOf","Math","round","scrollHeight","focus","onblur","handleTextChange","removeChild","onTouchStart","transformer","detach","selectedText","index","textFieldOnClick","handleSelected","input","selected","checkNode","forceUpdate","React","createRef","selectedNode","deleteNode","current","add","nodes","findOne","getLayer","batchDraw","Fragment","draggable","visible","onDblClick","onDblTap","onDragEnd","handleDragEnd","onTransform","onTransformEnd","target","scaleX","scaleY","CloseButton","deleteText","AddedImage","handleSelect","selectedImage","properties","deleteImage","fontFamilies","TextProperties","Form","Group","Control","as","name","placeholder","onChange","Row","Col","md","Label","type","Number","strokeWidth","stroke","className","Accordion","defaultActiveKey","Card","Header","Toggle","Button","variant","eventKey","Collapse","Body","letterSpacing","map","font","textDecoration","min","max","step","String","opacity","shadowBlur","shadowColor","shadowOpacity","defaultProps","Download","useState","show","setShow","dataURL","setDataURL","fileName","setFileName","download","uri","link","href","body","click","downloadURI","Modal","onHide","size","Title","alt","stageWidth","stageHeight","required","block","maxStageWidth","maxStageHeight","innerWidth","innerHeight","Size","handleSizeChange","FormGroup","FormLabel","FormControl","MemeGenerator","inputs","images","backgroundImageSrc","backgroundImageName","templateName","selectedTextarea","triggerCors","defaultSelect","addText","verticalAlign","length","addImage","files","reader","FileReader","readAsDataURL","onload","result","key","alert","selectText","oldSelected","selectImage","id","splice","addBackground","file","fr","img","returnDataURL","stageRef","getStage","toDataURL","Container","fluid","FormFile","hidden","layerRef","undefined","stagePosition","container","getBoundingClientRect","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9d98dae0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Image } from \"react-konva\";\r\nexport default class CanvasImage extends Component {\r\n  state = {\r\n    image: null,\r\n  };\r\n  componentDidMount() {\r\n    this.loadImage();\r\n  }\r\n  componentDidUpdate(oldProps) {\r\n    const { props } = this;\r\n    if (\r\n      oldProps.src !== props.src ||\r\n      oldProps.width !== props.width ||\r\n      oldProps.height !== props.height\r\n    ) {\r\n      if (!this.props.src) {\r\n        this.setState({\r\n          image: null,\r\n        });\r\n      } else {\r\n        this.loadImage();\r\n      }\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    this.image.removeEventListener(\"load\", this.handleLoad);\r\n  }\r\n\r\n  async loadImage() {\r\n    // save to \"this\" to remove \"load\" handler on unmount\r\n    this.image = new window.Image();\r\n    let src = this.props.src;\r\n  \r\n    this.image.src = src;\r\n    this.image.sameSite = \"None\";\r\n    this.image.crossOrigin=\"anonymous\"\r\n    this.image.width = this.props.width;\r\n    this.image.height = this.props.height;\r\n    this.image.addEventListener(\"load\", this.handleLoad);\r\n  }\r\n  handleLoad = () => {\r\n    // after setState react-konva will update canvas and redraw the layer\r\n    // because \"image\" property is changed\r\n    this.setState({\r\n      image: this.image,\r\n    });\r\n    // if you keep same image object during source updates\r\n    // you will have to update layer manually:\r\n    // this.imageNode.getLayer().batchDraw();\r\n  };\r\n  render() {\r\n    return (\r\n      <Image\r\n        x={this.props.x}\r\n        y={this.props.y}\r\n        image={this.state.image}\r\n        \r\n        ref={(node) => {\r\n          this.imageNode = node;\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Text, Group } from \"react-konva\";\r\n\r\nconst closeButton = (props) => {\r\n  return (\r\n    <Group\r\n      ref={props.deleteRef}\r\n      onClick={() => props.delete()}\r\n      onTouchEnd={() => props.delete()}\r\n    >\r\n      <Text\r\n        width={18}\r\n        height={13}\r\n        fontSize={20}\r\n        fontFamily=\"Arial\"\r\n        text=\"X\"\r\n        fill=\"red\"\r\n      />\r\n    </Group>\r\n  );\r\n};\r\nexport default closeButton;\r\n","import React, { Component } from 'react'\r\nimport { Text, Transformer, Group } from \"react-konva\"\r\nimport CloseButton from \"./CloseButton\"\r\nexport default class CanvasText extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isHide: true,\r\n        }\r\n\r\n        this.deleteRef = React.createRef();\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.input.selected) {\r\n            this.checkNode()\r\n        }\r\n    }\r\n    textFieldOnDblClick = (e) => {\r\n        // Seçili olan textin indexini atar\r\n        const textNode = e.currentTarget.attrs;\r\n        const absolutePosition = e.currentTarget.absolutePosition();\r\n        this.setState({\r\n            isHide: false\r\n        })\r\n        let areaPosition = { x:  absolutePosition.x-20, y:  absolutePosition.y +63 }\r\n        var textarea = document.createElement('textarea');\r\n        document.getElementById(\"canvasDiv\").appendChild(textarea);\r\n\r\n        textarea.value = textNode.text;\r\n        textarea.style.position = 'absolute';\r\n        textarea.style.top = areaPosition.y + 'px';\r\n        textarea.style.left = areaPosition.x + 'px';\r\n        textarea.style.fontSize = textNode.fontSize + 'px';\r\n        textarea.style.width = textNode.width - textNode.padding * 2 + 'px';\r\n        textarea.style.height =\r\n            textNode.height - textNode.padding * 2 + 5 + 'px';\r\n        textarea.style.fontSize = textNode.fontSize + 'px';\r\n        textarea.style.border = 'none';\r\n        textarea.style.padding = '0px';\r\n        textarea.style.margin = '0px';\r\n        textarea.style.overflow = 'hidden';\r\n        textarea.style.background = 'none';\r\n        textarea.style.outline = 'none';\r\n        textarea.style.resize = 'none';\r\n        textarea.style.lineHeight = textNode.lineHeight;\r\n        textarea.style.fontFamily = textNode.fontFamily;\r\n        textarea.style.transformOrigin = 'left top';\r\n        textarea.style.textAlign = textNode.align;\r\n        textarea.style.color = \"black\";\r\n        const rotation = textNode.rotation;\r\n        var transform = '';\r\n        if (rotation) {\r\n            transform += 'rotateZ(' + rotation + 'deg)';\r\n        }\r\n        var px = 0;\r\n        // also we need to slightly move textarea on firefox\r\n        // because it jumps a bit\r\n        var isFirefox =\r\n            navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\r\n        if (isFirefox) {\r\n            px += 2 + Math.round(textNode.fontSize / 20);\r\n        }\r\n        transform += 'translateY(-' + px + 'px)';\r\n\r\n        textarea.style.transform = transform;\r\n        // reset height\r\n        textarea.style.height = 'auto';\r\n        // after browsers resized it we can set actual value\r\n        textarea.style.height = textarea.scrollHeight + 3 + 'px';\r\n        textarea.focus();\r\n\r\n        textarea.onblur = () => {\r\n            this.props.handleTextChange('text', textarea.value);\r\n            document.getElementById(\"canvasDiv\").removeChild(textarea);\r\n            this.setState({\r\n                isHide: true\r\n            })\r\n        }\r\n        textarea.onTouchStart = () => {\r\n            this.props.handleTextChange('text', textarea.value);\r\n            document.getElementById(\"canvasDiv\").removeChild(textarea);\r\n            this.setState({\r\n                isHide: true\r\n            })\r\n        }\r\n        if (this.transformer) this.transformer.detach();\r\n        // Silinecek nodun atamasını yapar\r\n        this.props.selectedText(this.props.index, textarea)\r\n    }\r\n    textFieldOnClick = (e) => {\r\n        this.handleSelected()\r\n        if (this.props.input.selected === true) {\r\n            this.checkNode();\r\n            this.props.selectedText(this.props.index, null);\r\n        }\r\n        else {\r\n            this.props.selectedText(null);\r\n        }\r\n    }\r\n    checkNode() {\r\n        const selectedNode = this.textNode;\r\n        const deleteNode = this.deleteRef.current;\r\n        this.transformer.add(deleteNode)\r\n        if (this.props.input.selected) {\r\n            this.transformer.nodes([selectedNode]);\r\n            deleteNode.position(this.transformer.findOne('.top-right').position())\r\n\r\n        }\r\n        else {\r\n            this.transformer.detach();\r\n        }\r\n        this.transformer.getLayer().batchDraw();\r\n    }\r\n    handleSelected = () => {\r\n        this.props.input.selected = !this.props.input.selected;\r\n        this.forceUpdate();\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <Text\r\n                    draggable\r\n                    ref={node => {\r\n                        this.textNode = node;\r\n                    }}\r\n                    onClick={(e) => this.textFieldOnClick(e)}\r\n                    onTouchStart={(e) => this.textFieldOnClick(e)}\r\n                    visible={this.state.isHide}\r\n                    {...this.props.input}\r\n                    onDblClick={(e) => this.textFieldOnDblClick(e)}\r\n                    onDblTap={(e) => this.textFieldOnDblClick(e)}\r\n                    onDragEnd={e => this.props.handleDragEnd(e.currentTarget.attrs, this.props.index)}\r\n                />\r\n\r\n                {\r\n                    this.props.input.selected &&\r\n                    <Group>\r\n                        <Transformer\r\n                            ref={node => {\r\n                                this.transformer = node;\r\n                            }}\r\n                            onTransform={(e) => { this.deleteRef.current.position(e.currentTarget.findOne('.top-right').position()) }}\r\n                            onTransformEnd={(e) => {\r\n\r\n                                this.props.handleTextChange('scaleX', e.target.attrs.scaleX);\r\n                                this.props.handleTextChange('scaleY', e.target.attrs.scaleY);\r\n                            }}\r\n                        />\r\n                        <CloseButton deleteRef={this.deleteRef} delete={this.props.deleteText} />\r\n                    </Group>\r\n                }\r\n\r\n            </React.Fragment>\r\n        )\r\n\r\n\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Image, Transformer, Group } from 'react-konva';\r\nimport CloseButton from \"./CloseButton\"\r\nexport default class AddedImage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      image: null,\r\n      selected: true,\r\n    }\r\n    this.deleteRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    this.loadImage();\r\n\r\n  }\r\n  checkNode() {\r\n    // transormerı ayarlar\r\n    const selectedNode = this.imageNode;\r\n    const deleteNode = this.deleteRef.current;\r\n    this.transformer.add(deleteNode)\r\n    if (this.state.selected) {\r\n      this.transformer.nodes([selectedNode]);\r\n      deleteNode.position(this.transformer.findOne('.top-right').position());\r\n    }\r\n    else {\r\n      this.transformer.detach();\r\n    }\r\n    this.transformer.getLayer().batchDraw();\r\n  }\r\n  componentDidUpdate(oldProps) {\r\n    if (oldProps.src !== this.props.src) {\r\n      this.loadImage();\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    this.image.removeEventListener('load', this.handleLoad);\r\n  }\r\n  handleSelect = () => {\r\n\r\n    this.handleSelected()\r\n\r\n    if (this.state.selected === true) {\r\n      this.checkNode()\r\n      this.props.selectedImage(this.props.index);\r\n    }\r\n    else {\r\n      this.props.selectedImage(null);\r\n    }\r\n  }\r\n\r\n  loadImage() {\r\n    // save to \"this\" to remove \"load\" handler on unmount\r\n    this.image = new window.Image();\r\n    this.image.crossOrigin = \"anonymous\";\r\n    this.image.src = this.props.src;\r\n    this.image.width = 300;\r\n    this.image.width = 300;\r\n\r\n    this.image.addEventListener('load', this.handleLoad);\r\n  }\r\n  handleLoad = () => {\r\n    // after setState react-konva will update canvas and redraw the layer\r\n    // because \"image\" property is changed\r\n    this.setState({\r\n      image: this.image\r\n    });\r\n    this.checkNode();\r\n  }\r\n  handleSelected = () => {\r\n    this.setState(state => ({\r\n      selected: !state.selected\r\n    }))\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Group draggable\r\n          onClick={() => this.handleSelect()}\r\n          onTouchStart={() => this.handleSelect()}\r\n          ref={node => {\r\n            this.imageNode = node;\r\n          }}\r\n        >\r\n\r\n          <Image\r\n            image={this.state.image}\r\n            {...this.props.properties}\r\n          />\r\n        </Group>\r\n        {this.state.selected &&\r\n          <Group>\r\n\r\n            <Transformer\r\n              ref={node => {\r\n                this.transformer = node;\r\n              }}\r\n              onTransformEnd={() => this.handleSelected()}\r\n              onTransform={(e) => { this.deleteRef.current.position(e.currentTarget.findOne('.top-right').position()) }}\r\n            />\r\n            <CloseButton deleteRef={this.deleteRef} delete={this.props.deleteImage} />\r\n          </Group>\r\n        }\r\n\r\n\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Form, Row, Col, Accordion, Card, Button } from \"react-bootstrap\";\r\nconst fontFamilies = [\r\n  \"Impact\",\r\n  \"Arial\",\r\n  \"Times New Roman\",\r\n  \"Georiga\",\r\n  \"Verdana\",\r\n  \"Lucida Console\",\r\n];\r\nconst TextProperties = ({ text, handleTextChange }) => {\r\n  return (\r\n    <Form>\r\n      <Form.Group>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          name=\"text\"\r\n          value={text.text}\r\n          placeholder=\"enter text\"\r\n          onChange={(e) => handleTextChange(e.target.name, e.target.value)}\r\n        />\r\n      </Form.Group>\r\n      <Row>\r\n        <Col md={3}>\r\n          <Form.Group>\r\n            <Form.Label>Font </Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              name=\"fontSize\"\r\n              value={text.fontSize}\r\n              onChange={(e) =>\r\n                handleTextChange(e.target.name, Number(e.target.value))\r\n              }\r\n            />\r\n          </Form.Group>\r\n        </Col>\r\n        <Col md={3}>\r\n          <Form.Group>\r\n            <Form.Label>Text Color</Form.Label>\r\n            <Form.Control\r\n              type=\"color\"\r\n              name=\"fill\"\r\n              value={text.fill}\r\n              onChange={(e) => handleTextChange(e.target.name, e.target.value)}\r\n            />\r\n          </Form.Group>\r\n        </Col>\r\n        <Col md={3}>\r\n          <Form.Group>\r\n            <Form.Label>Stroke Width</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              value={text.strokeWidth}\r\n              name=\"strokeWidth\"\r\n              onChange={(e) =>\r\n                handleTextChange(e.target.name, Number(e.target.value))\r\n              }\r\n            />\r\n          </Form.Group>\r\n        </Col>\r\n        <Col md={3}>\r\n          <Form.Group>\r\n            <Form.Label>Stroke</Form.Label>\r\n            <Form.Control\r\n              type=\"color\"\r\n              name=\"stroke\"\r\n              value={text.stroke}\r\n              onChange={(e) => handleTextChange(e.target.name, e.target.value)}\r\n            />\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mt-2\">\r\n        <Col>\r\n          <Accordion defaultActiveKey=\"0\">\r\n            <Card>\r\n              <Card.Header>\r\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                  More option for text\r\n                </Accordion.Toggle>\r\n              </Card.Header>\r\n              <Accordion.Collapse eventKey=\"0\">\r\n                <Card.Body>\r\n                  <Row>\r\n                    <Col>\r\n                      <Form.Group>\r\n                        <Form.Label>Padding</Form.Label>\r\n                        <Form.Control\r\n                          type=\"number\"\r\n                          name=\"padding\"\r\n                          value={text.padding}\r\n                          onChange={(e) =>\r\n                            handleTextChange(\r\n                              e.target.name,\r\n                              Number(e.target.value)\r\n                            )\r\n                          }\r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Group>\r\n                        <Form.Label>Letter Spacing</Form.Label>\r\n                        <Form.Control\r\n                          type=\"number\"\r\n                          name=\"letterSpacing\"\r\n                          value={text.letterSpacing}\r\n                          onChange={(e) =>\r\n                            handleTextChange(\r\n                              e.target.name,\r\n                              Number(e.target.value)\r\n                            )\r\n                          }\r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Group>\r\n                        <Form.Label>line Height</Form.Label>\r\n                        <Form.Control\r\n                          type=\"number\"\r\n                          name=\"lineHeight\"\r\n                          value={text.lineHeight}\r\n                          onChange={(e) =>\r\n                            handleTextChange(\r\n                              e.target.name,\r\n                              Number(e.target.value)\r\n                            )\r\n                          }\r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>\r\n                      <Form.Group>\r\n                        <Form.Label>Font Family </Form.Label>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={text.fontFamily}\r\n                          name=\"fontFamily\"\r\n                          onChange={(e) =>\r\n                            handleTextChange(e.target.name, e.target.value)\r\n                          }\r\n                        >\r\n                          <option></option>\r\n                          {fontFamilies.map((font) => (\r\n                            <option value={font} key={font}>\r\n                              {font}\r\n                            </option>\r\n                          ))}\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Group>\r\n                        <Form.Label>Align</Form.Label>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={text.align}\r\n                          name=\"align\"\r\n                          onChange={(e) =>\r\n                            handleTextChange(e.target.name, e.target.value)\r\n                          }\r\n                        >\r\n                          <option></option>\r\n                          <option value=\"center\">Center</option>\r\n                          <option value=\"right\">Right</option>\r\n                          <option value=\"left\">Left</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                      <Form.Group>\r\n                        <Form.Label>Decoration</Form.Label>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={text.textDecoration}\r\n                          name=\"textDecoration\"\r\n                          onChange={(e) =>\r\n                            handleTextChange(e.target.name, e.target.value)\r\n                          }\r\n                        >\r\n                          <option></option>\r\n                          <option value=\"\">Normal</option>\r\n                          <option value=\"line-through\">line-through</option>\r\n                          <option value=\"underline\">underline</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Group>\r\n                        <Form.Label>opacity</Form.Label>\r\n                        <Form.Control\r\n                          type=\"range\"\r\n                          min={1}\r\n                          max={2}\r\n                          name=\"opacity\"\r\n                          step={0.05}\r\n                          value={String(2 - text.opacity)}\r\n                          onChange={(e) =>\r\n                            handleTextChange(\r\n                              e.target.name,\r\n                              Number(2 - e.target.value)\r\n                            )\r\n                          }\r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>\r\n                      <Form.Group>\r\n                        <Form.Label>Shadow Blur</Form.Label>\r\n                        <Form.Control\r\n                          type=\"number\"\r\n                          name=\"shadowBlur\"\r\n                          value={text.shadowBlur}\r\n                          onChange={(e) =>\r\n                            handleTextChange(\r\n                              e.target.name,\r\n                              Number(e.target.value)\r\n                            )\r\n                          }\r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Group>\r\n                        <Form.Label>shadow Color</Form.Label>\r\n                        <Form.Control\r\n                          type=\"color\"\r\n                          name=\"shadowColor\"\r\n                          value={text.shadowColor}\r\n                          onChange={(e) => {\r\n                            handleTextChange(e.target.name, e.target.value);\r\n                          }}\r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Group>\r\n                        <Form.Label>Shadow Opacity</Form.Label>\r\n                        <Form.Control\r\n                          type=\"range\"\r\n                          min={1}\r\n                          max={2}\r\n                          name=\"shadowOpacity\"\r\n                          step={0.05}\r\n                          value={String(2 - text.shadowOpacity)}\r\n                          onChange={(e) =>\r\n                            handleTextChange(\r\n                              e.target.name,\r\n                              Number(2 - e.target.value)\r\n                            )\r\n                          }\r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                </Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n          </Accordion>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n};\r\n\r\nTextProperties.defaultProps = {\r\n  text: {\r\n    fontSize: 0,\r\n    strokeWidth: 0,\r\n    shadowBlur: 0,\r\n    padding: 0,\r\n    letterSpacing: 0,\r\n    lineHeight: 0,\r\n    fill: \"#000000\",\r\n    shadowColor: \"#000000\",\r\n    stroke: \"#000000\",\r\n  },\r\n};\r\n\r\nexport default TextProperties;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal, Form } from \"react-bootstrap\";\r\n\r\nconst Download = (props) => {\r\n  const [show, setShow] = useState(false);\r\n  const [dataURL, setDataURL] = useState(\"\");\r\n  const [fileName, setFileName] = useState(\"\");\r\n\r\n  const downloadURI = (uri, name) => {\r\n    var link = document.createElement(\"a\");\r\n    link.download = name;\r\n    link.href = uri;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n  const download = () => {\r\n    var dataURL = props.dataURL();\r\n    downloadURI(dataURL, fileName);\r\n    setShow(false);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFileName(e.target.value);\r\n  };\r\n\r\n  const openModal = () => {\r\n    setShow(!show);\r\n    setDataURL(props.dataURL());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button className=\"download-button\" onClick={() => openModal()}>\r\n        Download File\r\n      </Button>\r\n      <Modal show={show} onHide={() => setShow(!show)} size=\"xl\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Download File</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"p-0\">\r\n          <div className=\"text-center\">\r\n            <img\r\n              src={dataURL}\r\n              alt=\"meme\"\r\n              width={props.stageWidth}\r\n              height={props.stageHeight}\r\n            />\r\n          </div>\r\n          <Form className=\"p-2\">\r\n            <Form.Group>\r\n              <Form.Label>File Name</Form.Label>\r\n              <Form.Control\r\n                name=\"name\"\r\n                type=\"text\"\r\n                required\r\n                value={fileName}\r\n                onChange={handleChange}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"button\"\r\n              onClick={() => download()}\r\n              block\r\n            >\r\n              Download File\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Download;\r\n","export const maxStageWidth = 1500;\r\nexport const maxStageHeight = 1500;\r\nexport const stageWidth =\r\n  window.innerWidth < 500 ? window.innerWidth - 20 : 500;\r\nexport const stageHeight =\r\n  window.innerHeight < 500 ? window.innerHeight - 20 : 500;\r\n","import React from \"react\";\r\nimport { FormGroup, FormLabel, FormControl, Row, Col } from \"react-bootstrap\";\r\nimport { maxStageWidth, maxStageHeight } from \"../utils/constants\";\r\nconst Size = ({ stageWidth, stageHeight, handleSizeChange }) => {\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <FormGroup className=\"d-flex flex-column\">\r\n          <FormLabel className=\"text-center text-nowrap\">\r\n            Width {stageWidth}px\r\n          </FormLabel>\r\n          <FormControl\r\n            type=\"range\"\r\n            min={20}\r\n            max={maxStageWidth}\r\n            name=\"stageWidth\"\r\n            step={1}\r\n            value={Number(stageWidth)}\r\n            onChange={(e) => handleSizeChange(e)}\r\n          />\r\n        </FormGroup>\r\n      </Col>\r\n      <Col>\r\n        <FormGroup className=\"d-flex flex-column\">\r\n          <FormLabel className=\"text-center text-nowrap\">\r\n            Height {stageHeight}px\r\n          </FormLabel>\r\n          <FormControl\r\n            className=\"\"\r\n            type=\"range\"\r\n            min={20}\r\n            max={maxStageHeight}\r\n            name=\"stageHeight\"\r\n            step={1}\r\n            value={Number(stageHeight)}\r\n            onChange={(e) => handleSizeChange(e)}\r\n          />\r\n        </FormGroup>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\nexport default Size;\r\n","import React, { Component } from \"react\";\r\nimport { Stage, Layer } from \"react-konva\";\r\nimport CanvasImage from \"./CanvasImage\";\r\nimport CanvasText from \"./CanvasText\";\r\nimport AddedImage from \"./AddedImage\";\r\nimport TextProperties from \"./TextProperties\";\r\nimport Download from \"./Download\";\r\nimport Size from \"./Size\";\r\n\r\nimport {\r\n  maxStageWidth,\r\n  maxStageHeight,\r\n  stageHeight,\r\n  stageWidth,\r\n} from \"../utils/constants\";\r\nimport { FormFile, Button, Row, Col, Container } from \"react-bootstrap\";\r\n\r\nclass MemeGenerator extends Component {\r\n  state = {\r\n    inputs: [],\r\n    images: [],\r\n    backgroundImageSrc: null,\r\n    backgroundImageName: null,\r\n    templateName: null,\r\n    selectedText: null,\r\n    selectedTextarea: null,\r\n    selectedImage: null,\r\n    src: \"\",\r\n    stageWidth,\r\n    stageHeight,\r\n    triggerCors: false,\r\n    defaultSelect: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.document.addEventListener(\"keydown\", (e) => {\r\n      if (e.key === \"Delete\" && this.state.selectedText != null) {\r\n        this.deleteText();\r\n      }\r\n    });\r\n  }\r\n\r\n  addText = () => {\r\n    const inputs = this.state.inputs;\r\n    if (this.state.selectedText != null) {\r\n      inputs[this.state.selectedText].selected = false;\r\n    }\r\n    this.setState((state) => ({\r\n      inputs: [\r\n        ...inputs,\r\n        {\r\n          x: 50,\r\n          y: 50,\r\n          text: \"yazı ekleyin\",\r\n          fontSize: 25,\r\n          selected: true,\r\n          fontFamily: \"Impact\",\r\n          fill: \"#ffffff\",\r\n          strokeWidth: 1.5,\r\n          stroke: \"#000000\",\r\n          shadowColor: \"#000000\",\r\n          align: \"center\",\r\n          padding: 5,\r\n          letterSpacing: 1,\r\n          lineHeight: 1,\r\n          textDecoration: \"none\",\r\n          verticalAlign: \"top\",\r\n          opacity: 1,\r\n          shadowOpacity: 1,\r\n          shadowBlur: 0,\r\n        },\r\n      ],\r\n      selectedText: state.inputs.length,\r\n    }));\r\n  };\r\n  addImage = (e) => {\r\n    const files = e.target.files;\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(files[0]);\r\n\r\n    reader.onload = (e) => {\r\n      this.setState((state) => ({\r\n        images: [\r\n          ...state.images,\r\n          {\r\n            properties: {\r\n              x: 40,\r\n              y: 50,\r\n            },\r\n            src: e.target.result,\r\n          },\r\n        ],\r\n        selectedImage: state.images.length,\r\n      }));\r\n    };\r\n  };\r\n  handleTextChange = (key, value) => {\r\n    if (this.state.selectedText === null) {\r\n      alert(\"please select a text\");\r\n      return;\r\n    }\r\n\r\n    const inputs = this.state.inputs;\r\n    inputs[this.state.selectedText][key] = value;\r\n    inputs[this.state.selectedText].selected = false;\r\n    this.setState({\r\n      inputs,\r\n    });\r\n  };\r\n  selectText = (index, textarea) => {\r\n    const inputs = this.state.inputs;\r\n    const oldSelected = this.state.selectedText;\r\n    if (oldSelected != null) {\r\n      inputs[oldSelected].selected = false;\r\n    }\r\n    if (index != null) {\r\n      inputs[index].selected = true;\r\n    }\r\n    this.setState({\r\n      inputs,\r\n      selectedText: index,\r\n      selectedTextarea: textarea,\r\n    });\r\n  };\r\n  selectImage = (index) => {\r\n    this.setState({\r\n      selectedImage: index,\r\n    });\r\n  };\r\n  deleteText = (index) => {\r\n    const id = index;\r\n    if (id != null) {\r\n      const inputs = this.state.inputs;\r\n      inputs.splice(id, 1);\r\n\r\n      this.setState({\r\n        inputs,\r\n        selectedText: null,\r\n        selectedTextarea: null,\r\n      });\r\n    } else {\r\n      alert(\"please select a text\");\r\n    }\r\n  };\r\n  handleDragEnd = (target, index) => {\r\n    let inputs = this.state.inputs;\r\n    inputs[index].x = target.x;\r\n    inputs[index].y = target.y;\r\n    this.setState({\r\n      inputs,\r\n    });\r\n  };\r\n  deleteImage = () => {\r\n    const id = this.state.selectedImage;\r\n    if (id != null) {\r\n      const images = this.state.images;\r\n      delete images[id];\r\n      this.setState({\r\n        images,\r\n        selectedImage: null,\r\n      });\r\n    } else {\r\n      alert(\"please select a image\");\r\n    }\r\n  };\r\n  addBackground = (e) => {\r\n    const file = e.target.files[0];\r\n    var fr = new FileReader();\r\n\r\n    var img = new Image();\r\n    img.onload = () => {\r\n      let stageWidth = img.width;\r\n      let stageHeight = img.height;\r\n      stageWidth = stageWidth > maxStageWidth ? maxStageWidth : stageWidth;\r\n      stageHeight = stageHeight > maxStageHeight ? maxStageHeight : stageHeight;\r\n\r\n      this.setState({\r\n        backgroundImageSrc: img.src,\r\n        backgroundImageName: img.name,\r\n        stageWidth,\r\n        stageHeight,\r\n      });\r\n    };\r\n    fr.onload = () => {\r\n      img.name = file.name;\r\n      img.src = fr.result;\r\n    };\r\n    fr.readAsDataURL(file);\r\n  };\r\n  handleSizeChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: Number(e.target.value),\r\n    });\r\n  };\r\n  returnDataURL = () => {\r\n    const dataURL = this.stageRef ? this.stageRef.getStage().toDataURL() : null;\r\n    return dataURL;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      src,\r\n      backgroundImageSrc,\r\n      stageWidth,\r\n      stageHeight,\r\n      images,\r\n      inputs,\r\n      selectedText,\r\n      triggerCors,\r\n    } = this.state;\r\n    return (\r\n      <Container className=\"pl-4 pr-4\" fluid>\r\n        <Row>\r\n          <Col md={4}>\r\n            <TextProperties\r\n              handleTextChange={this.handleTextChange}\r\n              selectedText={selectedText}\r\n              text={inputs[selectedText]}\r\n            />\r\n          </Col>\r\n\r\n          <Col id=\"canvasDiv\" md={4}>\r\n            <Row>\r\n              <label className=\"btn btn-outline-primary  col m-2\">\r\n                Change Background image\r\n                <FormFile onChange={(e) => this.addBackground(e)} hidden />\r\n              </label>\r\n              <label className=\"btn btn-outline-primary  col m-2 d-flex\">\r\n                <span className=\"m-auto\">Add Image</span>\r\n                <FormFile onChange={(e) => this.addImage(e)} hidden />\r\n              </label>\r\n              <Button\r\n                variant=\"outline-primary\"\r\n                className=\"col m-2\"\r\n                onClick={() => this.addText()}\r\n              >\r\n                Add Text\r\n              </Button>\r\n            </Row>\r\n            <Row>\r\n              <Col className=\"pt-2\">\r\n                <Stage\r\n                  className=\"justify-content-center mb-5 d-flex\"\r\n                  width={stageWidth}\r\n                  height={stageHeight}\r\n                  ref={(node) => {\r\n                    this.stageRef = node;\r\n                  }}\r\n                >\r\n                  <Layer\r\n                    ref={(node) => {\r\n                      this.layerRef = node;\r\n                    }}\r\n                  >\r\n                    <CanvasImage\r\n                      src={backgroundImageSrc ? backgroundImageSrc : src}\r\n                      width={stageWidth}\r\n                      triggerCors={triggerCors}\r\n                      height={stageHeight}\r\n                    />\r\n                    {images &&\r\n                      images.map((image, index) => {\r\n                        if (image === undefined) {\r\n                          return null;\r\n                        } else {\r\n                          return (\r\n                            <AddedImage\r\n                              src={image.src}\r\n                              properties={image.properties}\r\n                              key={index}\r\n                              index={index}\r\n                              selectedImage={this.selectImage}\r\n                              deleteImage={this.deleteImage}\r\n                            />\r\n                          );\r\n                        }\r\n                      })}\r\n                    {inputs &&\r\n                      inputs.map((input, index) => {\r\n                        return (\r\n                          <CanvasText\r\n                            input={input}\r\n                            handleDragEnd={this.handleDragEnd}\r\n                            stagePosition={() =>\r\n                              this.stageRef.container().getBoundingClientRect()\r\n                            }\r\n                            handleTextChange={this.handleTextChange}\r\n                            index={index}\r\n                            key={index}\r\n                            selectedText={this.selectText}\r\n                            deleteText={() => this.deleteText(index)}\r\n                          />\r\n                        );\r\n                      })}\r\n                  </Layer>\r\n                </Stage>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n\r\n          <Col className=\"memegenerator-right-col\" md={4}>\r\n            <Size\r\n              stageWidth={stageWidth}\r\n              stageHeight={stageHeight}\r\n              handleSizeChange={this.handleSizeChange}\r\n            />\r\n            <Row>\r\n              <Col>\r\n                <Download\r\n                  dataURL={() => this.returnDataURL()}\r\n                  width={stageWidth}\r\n                  height={stageHeight}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MemeGenerator;\r\n","import \"./App.css\";\nimport MemeGenerator from \"./meme-generator/MemeGenerator\";\nfunction App() {\n  return (\n    <div className=\"App\" style={{ padding: 30 }}>\n      <MemeGenerator />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}